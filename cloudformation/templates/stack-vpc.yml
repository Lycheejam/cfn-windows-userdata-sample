---
AWSTemplateFormatVersion: '2010-09-09'
Description: VPC and network stack"

Parameters:
  Environment:
    Type: String
    Description: Enter prefix that should be used for tags.
    Default: development

  VpcCidr:
    Type: String
    Description: CIDR block should be used to create the VPC (e.g. 172.21.1.0/24)
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{2})"
    ConstraintDescription: Must be a valid IP CIDR range of the form x.x.x.x/x. (e.g. 172.21.1.0/24)
  PublicSubnetCidrA:
    Type: String
    Description: CIDR block should be used to create the VPC (e.g. 172.21.1.0/24)
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{2})"
    ConstraintDescription: Must be a valid IP CIDR range of the form x.x.x.x/x. (e.g. 172.21.1.0/24)
  PublicSubnetCidrC:
    Type: String
    Description: CIDR block should be used to create the VPC (e.g. 172.21.1.0/24)
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{2})"
    ConstraintDescription: Must be a valid IP CIDR range of the form x.x.x.x/x. (e.g. 172.21.1.0/24)

  AvailabilityZoneA:
    Type: String
    Default: a
  AvailabilityZoneC:
    Type: String
    Default: c

  HomeCidr:
    Description: The IP address range that can be used to SSH to the EC2 instances
    Type: String
    ConstraintDescription: Must be a valid IP CIDR range of the form x.x.x.x/x.
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"

  HostedZoneName:
    Description: Specify the domain name of the dhcp options to be set for vpc.
    Type: String
    Default: AWS::NoValue

Conditions:
  IsCreateDhcpOptions: !Not [!Equals [!Ref HostedZoneName, AWS::NoValue]]

Resources:
  Vpc:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCidr
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: !Join ['-', [!Ref Environment, vpc]]

  PublicSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Join ['', [!Ref 'AWS::Region', !Ref AvailabilityZoneA]]
      CidrBlock: !Ref PublicSubnetCidrA
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Join ['-', [!Ref Environment, subnet-public-a]]
      VpcId: !Ref Vpc
  PublicSubnetC:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Join ['', [!Ref 'AWS::Region', !Ref AvailabilityZoneC]]
      CidrBlock: !Ref PublicSubnetCidrC
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Join ['-', [!Ref Environment, subnet-public-c]]
      VpcId: !Ref Vpc

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Join ['-', [!Ref Environment, igw]]
  InternetGatewayAttach:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref Vpc

  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: Name
          Value: !Join ['-', [!Ref Environment, rtb]]
      VpcId: !Ref Vpc
  Route:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
      RouteTableId: !Ref RouteTable

  SubnetRouteTableAssociationPublicA:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnetA
      RouteTableId: !Ref RouteTable
  SubnetRouteTableAssociationPublicC:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnetC
      RouteTableId: !Ref RouteTable

  NetworkAcl:
    Type: AWS::EC2::NetworkAcl
    Properties:
      Tags:
        - Key: Name
          Value: !Join ['-', [!Ref Environment, acl]]
      VpcId: !Ref Vpc
  InboundHTTPNetworkAclEntry:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      CidrBlock: 0.0.0.0/0
      Egress: false
      NetworkAclId: !Ref NetworkAcl
      PortRange:
        From: 80
        To: 80
      Protocol: 6
      RuleAction: allow
      RuleNumber: 100
  InboundHTTPSNetworkAclEntry:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      CidrBlock: 0.0.0.0/0
      Egress: false
      NetworkAclId: !Ref NetworkAcl
      PortRange:
        From: 443
        To: 443
      Protocol: 6
      RuleAction: allow
      RuleNumber: 101
  InboundSSHHomeNetworkAclEntry:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      CidrBlock: !Ref HomeCidr
      Egress: false
      NetworkAclId: !Ref NetworkAcl
      PortRange:
        From: 22
        To: 22
      Protocol: 6
      RuleAction: allow
      RuleNumber: 110
  InboundICMPEchoReplyNetworkAclEntry:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      CidrBlock: 0.0.0.0/0
      Egress: false
      NetworkAclId: !Ref NetworkAcl
      Icmp:
        Code: -1
        Type: 0
      Protocol: 1
      RuleAction: allow
      RuleNumber: 120
  InboundICMPEchoRequestNetworkAclEntry:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      CidrBlock: 0.0.0.0/0
      Egress: false
      NetworkAclId: !Ref NetworkAcl
      Icmp:
        Code: -1
        Type: 8
      Protocol: 1
      RuleAction: allow
      RuleNumber: 121
  InboundEphemeralPortNetworkAclEntry:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      CidrBlock: 0.0.0.0/0
      Egress: false
      NetworkAclId: !Ref NetworkAcl
      PortRange:
        From: 1024
        To: 65535
      Protocol: 6
      RuleAction: allow
      RuleNumber: 999

  OutboundHTTPNetworkAclEntry:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      CidrBlock: 0.0.0.0/0
      Egress: true
      NetworkAclId: !Ref NetworkAcl
      PortRange:
        From: 80
        To: 80
      Protocol: 6
      RuleAction: allow
      RuleNumber: 100
  OutboundHTTPSNetworkAclEntry:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      CidrBlock: 0.0.0.0/0
      Egress: true
      NetworkAclId: !Ref NetworkAcl
      PortRange:
        From: 443
        To: 443
      Protocol: 6
      RuleAction: allow
      RuleNumber: 101
  OutboundSSHHomeNetworkAclEntry:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      CidrBlock: !Ref HomeCidr
      Egress: true
      NetworkAclId: !Ref NetworkAcl
      PortRange:
        From: 22
        To: 22
      Protocol: 6
      RuleAction: allow
      RuleNumber: 110

  OutboundICMPEchoReplyNetworkAclEntry:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      CidrBlock: 0.0.0.0/0
      Egress: true
      NetworkAclId: !Ref NetworkAcl
      Icmp:
        Code: -1
        Type: 0
      Protocol: 1
      RuleAction: allow
      RuleNumber: 120
  OutboundICMPEchoRequestNetworkAclEntry:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      CidrBlock: 0.0.0.0/0
      Egress: true
      NetworkAclId: !Ref NetworkAcl
      Icmp:
        Code: -1
        Type: 8
      Protocol: 1
      RuleAction: allow
      RuleNumber: 121
  OutboundEphemeralPortNetworkAclEntry:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      CidrBlock: 0.0.0.0/0
      Egress: true
      NetworkAclId: !Ref NetworkAcl
      PortRange:
        From: 1024
        To: 65535
      Protocol: 6
      RuleAction: allow
      RuleNumber: 999

  DHCPOptions:
    Type: AWS::EC2::DHCPOptions
    Condition: IsCreateDhcpOptions
    Properties:
      DomainName: !Ref HostedZoneName
      DomainNameServers:
        - AmazonProvidedDNS
      Tags:
        - Key: Name
          Value: !Join ['-', [!Ref Environment, dopt]]
  VPCDHCPOptionsAssociation:
    Type: AWS::EC2::VPCDHCPOptionsAssociation
    Condition: IsCreateDhcpOptions
    Properties:
      DhcpOptionsId: !Ref DHCPOptions
      VpcId: !Ref Vpc

Outputs:
  VpcId:
    Description: VPC ID
    Value: !Ref Vpc
    Export:
      Name: !Join ['-', [!Ref Environment, vpc]]
  PublicSubnetA:
    Description: Subnet ID of Public in AZ-A
    Value: !Ref PublicSubnetA
    Export:
      Name: !Join ['-', [!Ref Environment, subnet-public-a]]
  PublicSubnetC:
    Description: Subnet ID of Public in AZ-C
    Value: !Ref PublicSubnetC
    Export:
      Name: !Join ['-', [!Ref Environment, subnet-public-c]]
  DHCPOptions:
    Condition: IsCreateDhcpOptions
    Description: DHCP Options Id
    Value: !Ref DHCPOptions
    Export:
      Name: !Join ['-', [!Ref Environment, dopt]]
